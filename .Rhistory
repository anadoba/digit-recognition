# Adam Nadoba
# script using Random Forest classifier
setwd('/users/adam/studia/inteligencjaObl/projekt')
# download packages
install.packages('randomForest')
install.packages('readr')
# load libraries
library(randomForest)
library(readr)
library(scales)
# for constant and repeatable results
set.seed(1)
# define constants
NumTrain = 10000
NumTest = 1000
NumTrees = 25
train <- read_csv("./train.csv")
rows <- sample(1:nrow(train), NumTrain)
labels <- as.factor(train[rows,1])
trainWithoutLabels <- train[rows,-1]
test <- head(train[-1], NumTest)
rf <- randomForest(trainWithoutLabels, labels, xtest=test, ntree=NumTrees)
predictions <- data.frame(ImageId=1:nrow(test), Label=levels(labels)[rf$test$predicted])
head(predictions)
write_csv(predictions, "rf_benchmark.csv")
precision(train[1], predictions[2])
precision <- function(correct, predicted) {
legitimate = 0
total = nrow(predicted)
for (i in 1:total) {
if (correct[i,1]==predicted[i,1]) {
legitimate = legitimate + 1
}
}
return(percent(legitimate/total))
}
precision(train[1], predictions[2])
print("Random Forest: ", randomForestPrecision)
randomForestPrecision <- precision(train[1], predictions[2])
print("Random Forest: ", randomForestPrecision)
str(randomForestPrecision)
print("Random Forest: ", str(randomForestPrecision))
print("Random Forest: " + randomForestPrecision)
print("Random Forest: " + str(randomForestPrecision))
print("Random Forest: ", str(randomForestPrecision))
cat("Random Forest: ", str(randomForestPrecision))
print(paste0("Random Forest: ", str(randomForestPrecision)))
print(paste0("Random Forest: ", str(randomForestPrecision)))
print(paste0("Random Forest: ", str(randomForestPrecision)))
print(paste("Random Forest: ", str(randomForestPrecision)))
str(randomForestPrecision)
sprintf("Random Forest: %d", randomForestPrecision)
sprintf("Random Forest: %s", randomForestPrecision)
sprintf("Random Forest precision: %s", randomForestPrecision)
# for constant and repeatable results
set.seed(1)
# define constants
NumTrain = 50000
NumTest = 10000
NumTrees = 25
# load data
train <- read_csv("./train.csv")
rows <- sample(1:nrow(train), NumTrain)
labels <- as.factor(train[rows,1])
trainWithoutLabels <- train[rows,-1]
test <- head(train[-1], NumTest)
# precision function to verify the results
precision <- function(correct, predicted) {
legitimate = 0
total = nrow(predicted)
for (i in 1:total) {
if (correct[i,1]==predicted[i,1]) {
legitimate = legitimate + 1
}
}
return(percent(legitimate/total))
}
# actual Random Forest classifying
rf <- randomForest(trainWithoutLabels, labels, xtest=test, ntree=NumTrees)
predictions <- data.frame(ImageId=1:nrow(test), Label=levels(labels)[rf$test$predicted])
head(predictions)
write_csv(predictions, "rf_benchmark.csv")
randomForestPrecision <- precision(train[1], predictions[2])
sprintf("Random Forest precision: %s", randomForestPrecision)
# for constant and repeatable results
set.seed(1)
# define constants
NumTrain = 20000
NumTest = 10000
NumTrees = 25
# load data
train <- read_csv("./train.csv")
rows <- sample(1:nrow(train), NumTrain)
labels <- as.factor(train[rows,1])
trainWithoutLabels <- train[rows,-1]
test <- head(train[-1], NumTest)
# precision function to verify the results
precision <- function(correct, predicted) {
legitimate = 0
total = nrow(predicted)
for (i in 1:total) {
if (correct[i,1]==predicted[i,1]) {
legitimate = legitimate + 1
}
}
return(percent(legitimate/total))
}
# actual Random Forest classifying
rf <- randomForest(trainWithoutLabels, labels, xtest=test, ntree=NumTrees)
predictions <- data.frame(ImageId=1:nrow(test), Label=levels(labels)[rf$test$predicted])
head(predictions)
write_csv(predictions, "rf_benchmark.csv")
randomForestPrecision <- precision(train[1], predictions[2])
sprintf("Random Forest precision: %s", randomForestPrecision)
# for constant and repeatable results
set.seed(1)
# define constants
NumTrain = 30000
NumTest = 10000
NumTrees = 25
# load data
train <- read_csv("./train.csv")
rows <- sample(1:nrow(train), NumTrain)
labels <- as.factor(train[rows,1])
trainWithoutLabels <- train[rows,-1]
test <- head(train[-1], NumTest)
# precision function to verify the results
precision <- function(correct, predicted) {
legitimate = 0
total = nrow(predicted)
for (i in 1:total) {
if (correct[i,1]==predicted[i,1]) {
legitimate = legitimate + 1
}
}
return(percent(legitimate/total))
}
# actual Random Forest classifying
rf <- randomForest(trainWithoutLabels, labels, xtest=test, ntree=NumTrees)
predictions <- data.frame(ImageId=1:nrow(test), Label=levels(labels)[rf$test$predicted])
head(predictions)
write_csv(predictions, "rf_benchmark.csv")
randomForestPrecision <- precision(train[1], predictions[2])
sprintf("Random Forest precision: %s", randomForestPrecision)
